[
  {
    "ContainingType": "IncommingPost.Controllers.DocumentsController",
    "Method": "GetAllDocuments",
    "RelativePath": "api/Documents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.DocumentDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentsController",
    "Method": "CreateDocument",
    "RelativePath": "api/Documents",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "IncommingPost.Models.CreateDocumentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.DocumentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentsController",
    "Method": "AssignExecutor",
    "RelativePath": "api/Documents/{documentId}/executors/{executorId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "documentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "executorId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentsController",
    "Method": "GetDocument",
    "RelativePath": "api/Documents/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.DocumentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentsController",
    "Method": "UpdateDocument",
    "RelativePath": "api/Documents/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "IncommingPost.Models.UpdateDocumentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentsController",
    "Method": "DeleteDocument",
    "RelativePath": "api/Documents/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentsController",
    "Method": "GetBySender",
    "RelativePath": "api/Documents/by-sender/{senderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "senderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.DocumentDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentsController",
    "Method": "GetByStatus",
    "RelativePath": "api/Documents/by-status/{status}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.DocumentDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentTypesController",
    "Method": "GetAllDocumentTypes",
    "RelativePath": "api/DocumentTypes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.DocumentTypeDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentTypesController",
    "Method": "CreateDocumentType",
    "RelativePath": "api/DocumentTypes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createTypeDto",
        "Type": "IncommingPost.Models.CreateDocumentTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.DocumentTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentTypesController",
    "Method": "GetDocumentType",
    "RelativePath": "api/DocumentTypes/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.DocumentTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentTypesController",
    "Method": "UpdateDocumentType",
    "RelativePath": "api/DocumentTypes/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateTypeDto",
        "Type": "IncommingPost.Models.UpdateDocumentTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.DocumentTypesController",
    "Method": "DeleteDocumentType",
    "RelativePath": "api/DocumentTypes/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.ExecutorsController",
    "Method": "GetAllExecutors",
    "RelativePath": "api/Executors",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.ExecutorDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.ExecutorsController",
    "Method": "CreateExecutor",
    "RelativePath": "api/Executors",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createExecutorDto",
        "Type": "IncommingPost.Models.CreateExecutorDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.ExecutorDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.ExecutorsController",
    "Method": "GetExecutor",
    "RelativePath": "api/Executors/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.ExecutorDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.ExecutorsController",
    "Method": "UpdateExecutor",
    "RelativePath": "api/Executors/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateExecutorDto",
        "Type": "IncommingPost.Models.UpdateExecutorDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.ExecutorsController",
    "Method": "DeleteExecutor",
    "RelativePath": "api/Executors/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.ExecutorsController",
    "Method": "GetExecutorsByDepartment",
    "RelativePath": "api/Executors/by-department/{department}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "department",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.ExecutorDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.ExecutorsController",
    "Method": "SearchExecutorsByName",
    "RelativePath": "api/Executors/search/{nameFragment}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nameFragment",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.ExecutorDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.RegistrationLogsController",
    "Method": "GetAllLogs",
    "RelativePath": "api/RegistrationLogs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.RegistrationLogDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.RegistrationLogsController",
    "Method": "CreateLogEntry",
    "RelativePath": "api/RegistrationLogs",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createLogEntryDto",
        "Type": "IncommingPost.Models.CreateLogEntryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.RegistrationLogDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.RegistrationLogsController",
    "Method": "GetLogsByDateRange",
    "RelativePath": "api/RegistrationLogs/by-date-range",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.RegistrationLogDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.RegistrationLogsController",
    "Method": "GetLogsByDocument",
    "RelativePath": "api/RegistrationLogs/by-document/{documentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "documentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.RegistrationLogDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.SendersController",
    "Method": "GetAllSenders",
    "RelativePath": "api/Senders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.SenderDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.SendersController",
    "Method": "CreateSender",
    "RelativePath": "api/Senders",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "IncommingPost.Models.CreateSenderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.SenderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.SendersController",
    "Method": "GetSender",
    "RelativePath": "api/Senders/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "IncommingPost.Models.SenderDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "IncommingPost.Controllers.SendersController",
    "Method": "UpdateSender",
    "RelativePath": "api/Senders/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "IncommingPost.Models.UpdateSenderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.SendersController",
    "Method": "DeleteSender",
    "RelativePath": "api/Senders/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "IncommingPost.Controllers.SendersController",
    "Method": "SearchSendersByName",
    "RelativePath": "api/Senders/search/{nameFragment}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nameFragment",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[IncommingPost.Models.SenderDto, IncommingPost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]